name: Build BCR Magisk Module (Android ARM64)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_NDK_VERSION: 26.1.10909125
      API_LEVEL: 30
      TARGET_ABI: arm64-v8a
      TOOLCHAIN_TRIPLE: aarch64-linux-android

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Set up cache key
      id: cache-key
      run: echo "key=bcr-arm64-${{ hashFiles('CMakeLists.txt', 'src/**') }}" >> $GITHUB_OUTPUT

    - name: Restore build cache
      uses: actions/cache@v4
      with:
        path: |
          build
          ~/.cache
        key: ${{ steps.cache-key.outputs.key }}
        restore-keys: |
          bcr-arm64-

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y ninja-build zip

    - name: Download Android NDK
      run: |
        mkdir -p $HOME/android-ndk
        cd $HOME/android-ndk
        curl -sSL https://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_VERSION}-linux.zip -o ndk.zip
        unzip -q ndk.zip
        echo "ANDROID_NDK_HOME=$HOME/android-ndk/android-ndk-r${ANDROID_NDK_VERSION}" >> $GITHUB_ENV

    - name: Configure with CMake (Android NDK)
      run: |
        mkdir -p build
        cd build
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=${TARGET_ABI} \
          -DANDROID_PLATFORM=android-${API_LEVEL} \
          -DCMAKE_BUILD_TYPE=Release \
          -G Ninja

    - name: Build binary for ARM64
      run: |
        cd build
        ninja

    - name: Copy binary into module
      run: |
        mkdir -p BCR/system/bin
        cp build/bcr BCR/system/bin/bcr
        chmod +x BCR/system/bin/bcr

    - name: Get version from module.prop
      id: version
      run: |
        VERSION=$(grep "^version=" BCR/module.prop | cut -d= -f2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Zip Magisk module
      run: |
        cd BCR
        zip -r "../BCR-${{ steps.version.outputs.version }}.zip" . -x ".git/*"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: BCR-${{ steps.version.outputs.version }}.zip
        path: BCR-${{ steps.version.outputs.version }}.zip
